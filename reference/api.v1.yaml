openapi: 3.0.0
info:
  title: api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /login:
    post:
      summary: Login
      tags:
        - login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Rossz jelszó
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: 'Forbidden, Amikor hiányzik a username vagy a jelszó'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: post-login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            examples:
              example-1: {}
      description: ''
  /register:
    post:
      summary: Register
      tags:
        - login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: 'Felhasználó létezik, vagy hiányzik a username/jelszó'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Adatbázissal valami gond van
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: post-register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
        description: ''
  /beers:
    get:
      summary: Sör lista
      tags:
        - beer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    _id:
                      type: string
                    pictureUrl:
                      type: string
        '500':
          description: Valami hiba az adatbázissal
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: get-beers
  '/beers/:beerId':
    parameters: []
    get:
      summary: Egy sör info
      tags:
        - beer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                  ingerdients:
                    type: string
                  pictureUrl:
                    type: string
                  timeToCook:
                    type: number
                    description: |
                      idő órában
                  _id:
                    type: string
              examples:
                example-1: {}
        '404':
          description: Ha nincs ilyen idjű objectum
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: 'Ha rossz az id formátum, vagy valami nagyobb baj van'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: get-beers-beerid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: ''
      parameters: []
      description: 'példa az eléréshez: http://localhost:3000/beer/5ebeb42aa071bad1a24b94b5'
  /breweries:
    get:
      summary: Főzde lista
      tags:
        - brewery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    location:
                      type: string
                    picture:
                      type: string
        '500':
          description: Valami hiba az adatbázissal
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    location:
                      type: string
                    picture:
                      type: string
      operationId: get-brewery
      description: Returns an array with the breweries.
    parameters: []
  '/breweries/:breweryId':
    parameters: []
    get:
      summary: Főzde info visszaadás
      tags:
        - brewery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  location:
                    type: string
                  description:
                    type: string
                  picture:
                    type: string
        '404':
          description: NIncs ilyen ids adat
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: 'Rossz id formátum, vagy valami nagyobb hiba'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: get-breweries-breweryid
  /brew/start:
    parameters: []
    post:
      summary: Főzés indítás
      operationId: post-brew-beerdid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Nincs bejelentkezve a felhasználó
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Szerver hiba
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '':
          description: Főzés elkezdődött
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      tags:
        - brew
        - protected
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                beerid:
                  type: string
            examples: {}
  /brews:
    get:
      summary: Főzésben lévő sörök
      tags:
        - brew
        - protected
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    brewId:
                      type: string
                      description: a főzés idje
                    beerName:
                      type: string
                    beerType:
                      type: string
                    actionNeeded:
                      type: boolean
                      description: ''
                    beerId:
                      type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: get-brew-status
      description: ''
    parameters: []
  /logout:
    post:
      summary: Logout
      operationId: post-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: User nincs beloginolva
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      tags:
        - login
  '/brew/:brewId':
    get:
      summary: Főzés információ
      tags:
        - brew
        - protected
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  stages:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                  currentStageIndex:
                    type: number
                  timeBeforeNextStage:
                    type: string
                    description: 'Órában h mikor következik a következő action, ha -1 akkor elértük a következő staget'
                  beerId:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: 'get-brew-:brewId'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
    delete:
      summary: Főzés törlés
      operationId: 'delete-brew-:brewId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal Server Error
      description: Kitörli a főzést
      tags:
        - brew
        - protected
  /brew/action:
    post:
      summary: Főzés akció gomb
      operationId: post-brew-action
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Nem vagyunk olyan állapotban h actionözzé
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal Server Error
      tags:
        - brew
        - protected
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brewId:
                  type: string
  /profile:
    get:
      summary: Profile
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  name:
                    type: string
        '401':
          description: Unauthorized
      operationId: get-profile
      description: felhasználó adatai
  /profile/chpasswd:
    post:
      summary: Password change
      operationId: post-profile-chpasswd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      tags:
        - user
      description: felhasználó jelszó módosítás
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldpasswd:
                  type: string
                newpasswd:
                  type: string
              required:
                - oldpasswd
                - newpasswd
  /authcheck:
    get:
      summary: AuthCheck
      tags:
        - login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAuthenticated:
                    type: boolean
      operationId: get-authcheck
components:
  schemas:
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        password:
          type: string
    beer:
      title: beer
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string
        picture:
          type: string
        ingredients:
          type: string
    brewery:
      title: brewery
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
        picture:
          type: string
        description:
          type: string
  securitySchemes: {}
