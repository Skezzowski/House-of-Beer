openapi: 3.0.0
info:
  title: api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /login:
    post:
      summary: Login
      tags:
        - login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '401':
          description: Rossz jelszó
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: 'Forbidden, Amikor hiányzik a username vagy a jelszó'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: post-login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            examples:
              example-1: {}
      description: ''
  /register:
    post:
      summary: Register
      tags:
        - login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: 'Felhasználó létezik, vagy hiányzik a username/jelszó'
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Adatbázissal valami gond van
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      operationId: post-register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                name:
                  type: string
                password:
                  type: string
        description: ''
  /beers:
    get:
      summary: Sör lista
      tags:
        - beer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    id:
                      type: string
                    picture:
                      type: string
      operationId: get-beers
  '/beers/{beerid}':
    parameters:
      - schema:
          type: string
        name: beerid
        in: path
        required: true
    get:
      summary: Egy sör info
      tags:
        - beer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                  ingerdients:
                    type: string
                  picture:
                    type: string
                  time-to-cook:
                    type: string
      operationId: get-beers-beerid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: ''
  /breweries:
    get:
      summary: Főzde lista
      tags:
        - brewery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    location:
                      type: string
                    picture:
                      type: string
        '':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    location:
                      type: string
                    picture:
                      type: string
      operationId: get-brewery
      description: Returns an array with the breweries.
    parameters: []
  '/breweries/{breweryid}':
    parameters:
      - schema:
          type: string
        name: breweryid
        in: path
        required: true
    get:
      summary: Főzde info visszaadás
      tags:
        - brewery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  location:
                    type: string
                  description:
                    type: string
                  picture:
                    type: string
      operationId: get-breweries-breweryid
  /brew:
    parameters: []
    post:
      summary: Főzés indítás
      operationId: post-brew-beerdid
      responses:
        '200':
          description: OK
      tags:
        - brew
        - protected
      description: 'Eddig csak a brewid van a bodyban, de majd később lehet kell valami, azért hagytam postnak'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                beerid:
                  type: string
  /brew/status:
    get:
      summary: Főzésben lévő sörök listázása
      tags:
        - brew
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    beerid:
                      type: string
                    name:
                      type: string
                    remaining-time:
                      type: string
      operationId: get-brew-status
  /logout:
    post:
      summary: Logout
      operationId: post-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: User nincs beloginolva
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
      tags:
        - login
components:
  schemas:
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        password:
          type: string
    beer:
      title: beer
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string
        picture:
          type: string
        ingredients:
          type: string
    brewery:
      title: brewery
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
        picture:
          type: string
        description:
          type: string
  securitySchemes: {}
